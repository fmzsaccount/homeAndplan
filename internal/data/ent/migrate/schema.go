// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// BannerColumns holds the columns for the "banner" table.
	BannerColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt32, Increment: true},
		{Name: "url", Type: field.TypeString, Default: ""},
		{Name: "sort", Type: field.TypeInt32, Default: 0},
		{Name: "title", Type: field.TypeString, Default: ""},
		{Name: "type", Type: field.TypeString, Default: ""},
		{Name: "link_id", Type: field.TypeString, Default: ""},
		{Name: "status", Type: field.TypeInt, Default: 0},
	}
	// BannerTable holds the schema information for the "banner" table.
	BannerTable = &schema.Table{
		Name:       "banner",
		Columns:    BannerColumns,
		PrimaryKey: []*schema.Column{BannerColumns[0]},
	}
	// PlanColumns holds the columns for the "plan" table.
	PlanColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt32, Increment: true},
		{Name: "recommend", Type: field.TypeInt, Default: 0},
		{Name: "category_id", Type: field.TypeInt32, Default: 0},
		{Name: "category", Type: field.TypeString, Default: ""},
		{Name: "name", Type: field.TypeString, Default: ""},
		{Name: "url", Type: field.TypeString, Default: ""},
		{Name: "utime", Type: field.TypeTime},
	}
	// PlanTable holds the schema information for the "plan" table.
	PlanTable = &schema.Table{
		Name:       "plan",
		Columns:    PlanColumns,
		PrimaryKey: []*schema.Column{PlanColumns[0]},
	}
	// PlanCategoryColumns holds the columns for the "plan_category" table.
	PlanCategoryColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt32, Increment: true},
		{Name: "sort", Type: field.TypeInt32, Default: 0},
		{Name: "name", Type: field.TypeString, Default: ""},
		{Name: "content", Type: field.TypeString, Default: ""},
		{Name: "url", Type: field.TypeString, Default: ""},
	}
	// PlanCategoryTable holds the schema information for the "plan_category" table.
	PlanCategoryTable = &schema.Table{
		Name:       "plan_category",
		Columns:    PlanCategoryColumns,
		PrimaryKey: []*schema.Column{PlanCategoryColumns[0]},
	}
	// ProductColumns holds the columns for the "product" table.
	ProductColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt32, Increment: true},
		{Name: "status", Type: field.TypeInt, Default: 0},
		{Name: "recommend", Type: field.TypeInt, Default: 0},
		{Name: "history", Type: field.TypeInt32, Default: 0},
		{Name: "category_name", Type: field.TypeString, Default: ""},
		{Name: "name", Type: field.TypeString, Default: ""},
		{Name: "content", Type: field.TypeString, Default: ""},
		{Name: "utime", Type: field.TypeTime},
		{Name: "service_link", Type: field.TypeString, Default: ""},
		{Name: "apply_link", Type: field.TypeString, Default: ""},
		{Name: "json", Type: field.TypeJSON},
		{Name: "category_id", Type: field.TypeInt32, Nullable: true},
	}
	// ProductTable holds the schema information for the "product" table.
	ProductTable = &schema.Table{
		Name:       "product",
		Columns:    ProductColumns,
		PrimaryKey: []*schema.Column{ProductColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "product_product_category_products",
				Columns:    []*schema.Column{ProductColumns[11]},
				RefColumns: []*schema.Column{ProductCategoryColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ProductCategoryColumns holds the columns for the "product_category" table.
	ProductCategoryColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt32, Increment: true},
		{Name: "status", Type: field.TypeInt, Default: 0},
		{Name: "level", Type: field.TypeInt32, Default: 0},
		{Name: "sort", Type: field.TypeInt32, Default: 0},
		{Name: "name", Type: field.TypeString, Default: ""},
		{Name: "parent_id", Type: field.TypeInt32, Nullable: true},
	}
	// ProductCategoryTable holds the schema information for the "product_category" table.
	ProductCategoryTable = &schema.Table{
		Name:       "product_category",
		Columns:    ProductCategoryColumns,
		PrimaryKey: []*schema.Column{ProductCategoryColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "product_category_product_category_children",
				Columns:    []*schema.Column{ProductCategoryColumns[5]},
				RefColumns: []*schema.Column{ProductCategoryColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SiteColumns holds the columns for the "site" table.
	SiteColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt32, Increment: true},
		{Name: "sort", Type: field.TypeInt32},
		{Name: "status", Type: field.TypeInt},
		{Name: "name", Type: field.TypeString},
		{Name: "link", Type: field.TypeString},
		{Name: "category", Type: field.TypeString},
	}
	// SiteTable holds the schema information for the "site" table.
	SiteTable = &schema.Table{
		Name:       "site",
		Columns:    SiteColumns,
		PrimaryKey: []*schema.Column{SiteColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		BannerTable,
		PlanTable,
		PlanCategoryTable,
		ProductTable,
		ProductCategoryTable,
		SiteTable,
	}
)

func init() {
	BannerTable.Annotation = &entsql.Annotation{
		Table: "banner",
	}
	PlanTable.Annotation = &entsql.Annotation{
		Table: "plan",
	}
	PlanCategoryTable.Annotation = &entsql.Annotation{
		Table: "plan_category",
	}
	ProductTable.ForeignKeys[0].RefTable = ProductCategoryTable
	ProductTable.Annotation = &entsql.Annotation{
		Table: "product",
	}
	ProductCategoryTable.ForeignKeys[0].RefTable = ProductCategoryTable
	ProductCategoryTable.Annotation = &entsql.Annotation{
		Table: "product_category",
	}
	SiteTable.Annotation = &entsql.Annotation{
		Table: "site",
	}
}
